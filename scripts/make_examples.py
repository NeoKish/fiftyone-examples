"""
Script that prepares examples for publishing by
-   Adding links to the header of the example notebooks
-   Regenerating the table of contents in ``README.md``

| Copyright 2017-2022, Voxel51, Inc.
| `voxel51.com <https://voxel51.com/>`_
|
"""
import argparse
import json
import os

from jinja2 import Environment, BaseLoader
import yaml

import eta.core.utils as etau


ROOT_DIR = "/".join(os.path.realpath(__file__).split("/")[:-2])
EXAMPLES_DIR = os.path.join(ROOT_DIR, "examples")
INDEX_PATH = os.path.join(ROOT_DIR, "index.yaml")
README_PATH = os.path.join(ROOT_DIR, "README.md")

# The images for the templates below are located at
# https://github.com/voxel51/fiftyone-examples/issues/11

TOC_TEMPLATE = """
<!-- Autogenerated by `scripts/make_examples.py` -->
<table>
    <tr>
        <th align="center">Shortcuts</th>
        <th align="center">Examples</th>
        <th align="center">Description</th>
    </tr>
{% for example in examples %}
    <tr>
        <td>
            <a target="_blank" href="https://colab.research.google.com/github/voxel51/fiftyone-examples/blob/master/{{ example.path }}">
                <img src="https://user-images.githubusercontent.com/25985824/104791629-6e618700-5769-11eb-857f-d176b37d2496.png" height="22" width="22">
            </a>
            <a target="_blank" href="https://nbviewer.jupyter.org/github/voxel51/fiftyone-examples/blob/master/{{ example.path }}">
                <img src="https://user-images.githubusercontent.com/25985824/104791634-6efa1d80-5769-11eb-8a4c-71d6cb53ccf0.png" height="22" width="22">
            </a>
            <a id="raw-url" href="https://raw.githubusercontent.com/voxel51/fiftyone-examples/master/{{ example.path }}" download>
                <img src="https://user-images.githubusercontent.com/25985824/104792428-60f9cc00-576c-11eb-95a4-5709d803023a.png" height="22" width="22">
            </a>
        </td>
        <td><a href="{{ example.path }}">{{ example.title }}</a></td>
        <td>{{ example.description }}</td>
    </tr>
{% endfor %}
</table>
"""

LINKS_TEMPLATE = """
<!-- Autogenerated by `scripts/make_examples.py` -->
<table align="left">
    <td>
        <a target="_blank" href="https://colab.research.google.com/github/voxel51/fiftyone-examples/blob/master/{{ notebook_path }}">
            <img src="https://user-images.githubusercontent.com/25985824/104791629-6e618700-5769-11eb-857f-d176b37d2496.png" height="32" width="32">
            Try in Google Colab
        </a>
    </td>
    <td>
        <a target="_blank" href="https://nbviewer.jupyter.org/github/voxel51/fiftyone-examples/blob/master/{{ notebook_path }}">
            <img src="https://user-images.githubusercontent.com/25985824/104791634-6efa1d80-5769-11eb-8a4c-71d6cb53ccf0.png" height="32" width="32">
            Share via nbviewer
        </a>
    </td>
    <td>
        <a target="_blank" href="https://github.com/voxel51/fiftyone-examples/blob/master/{{ notebook_path }}">
            <img src="https://user-images.githubusercontent.com/25985824/104791633-6efa1d80-5769-11eb-8ee3-4b2123fe4b66.png" height="32" width="32">
            View on GitHub
        </a>
    </td>
    <td>
        <a href="https://github.com/voxel51/fiftyone-examples/raw/master/{{ notebook_path }}" download>
            <img src="https://user-images.githubusercontent.com/25985824/104792428-60f9cc00-576c-11eb-95a4-5709d803023a.png" height="32" width="32">
            Download notebook
        </a>
    </td>
</table>
"""


def _add_notebook_links(notebook_path):
    fullpath = os.path.join(ROOT_DIR, notebook_path)
    with open(fullpath, "r") as f:
        notebook = json.load(f)

    try:
        first_cell = notebook["cells"][0]
        first_cell_content = "\n".join(first_cell["source"])
        add_links_cell = not first_cell_content.strip().startswith("<!--")
    except (IndexError, ValueError):
        add_links_cell = True

    if add_links_cell:
        print("Adding links cell to '%s'" % notebook_path)
        notebook["cells"].insert(
            0, {"cell_type": "markdown", "metadata": {}, "source": []}
        )
    else:
        print("Updating links cell in '%s'" % notebook_path)

    environment = Environment(
        loader=BaseLoader, trim_blocks=True, lstrip_blocks=True,
    )

    template = environment.from_string(LINKS_TEMPLATE)

    source = template.render(notebook_path=notebook_path).strip()
    source_list = [l + "\n" for l in source.split("\n")]

    notebook["cells"][0]["source"] = source_list

    with open(fullpath, "w") as f:
        f.write(json.dumps(notebook, indent=1, ensure_ascii=False) + "\n")


def _make_examples_table():
    with open(INDEX_PATH, "r") as f:
        d = yaml.safe_load(f)

    environment = Environment(
        loader=BaseLoader, trim_blocks=True, lstrip_blocks=True,
    )

    template = environment.from_string(TOC_TEMPLATE)

    return template.render(examples=d["examples"])


def _update_readme():
    toc_header = "## Table of contents"
    table = _make_examples_table()

    toc = toc_header + "\n" + table + "\n\n"

    with open(README_PATH, "r") as f:
        orig_content = f.read()

    idx1 = orig_content.find(toc_header)
    if idx1 < 0:
        print(toc)
        raise ValueError(
            "No ToC section found; you must manually insert the above section "
            "into '%s'" % README_PATH
        )

    idx2 = orig_content.find("## ", idx1 + 3)
    content = orig_content[:idx1] + toc + orig_content[idx2:]

    with open(README_PATH, "w") as f:
        f.write(content)

    print("Updated table of contents section in README.md")


def main(notebook_paths, skip_readme):
    if notebook_paths:
        notebook_paths = [
            os.path.relpath(os.path.abspath(path), ROOT_DIR)
            for path in notebook_paths
        ]
    else:
        notebook_paths = [
            os.path.join("examples", path)
            for path in etau.list_files(EXAMPLES_DIR, recursive=True)
            if path.endswith(".ipynb") and ".ipynb_checkpoints" not in path
        ]

    for notebook_path in notebook_paths:
        _add_notebook_links(notebook_path)

    if not skip_readme:
        _update_readme()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Prepares FiftyOne examples for official release."
    )
    parser.add_argument(
        "notebook_paths",
        metavar="NOTEBOOK_PATH",
        nargs="*",
        help="paths to notebooks to add links for (default = all examples)",
    )
    parser.add_argument(
        "-s",
        "--skip-readme",
        action="store_true",
        help="don't update the table of contents section in the README",
    )
    args = parser.parse_args()

    main(args.notebook_paths, args.skip_readme)
